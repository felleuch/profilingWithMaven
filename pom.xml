<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>mavenProfilingTest</groupId>
    <artifactId>mavenProfilingTest</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.16</version>
        </dependency>
    </dependencies>

    <!-- Profiles configuration -->
    <profiles>
        <profile>
            <id>dev</id>
            <!-- Dev profile is active by default -->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!--
                    Specifies the build profile id, which is used to find out the correct properties file.
                    This is not actually necessary for this example, but it can be used for other purposes.
                -->
                <build.profile.id>dev</build.profile.id>
            </properties>
            <build>
                <filters>
                    <!--
                        Specifies path to the properties file, which contains profile specific
                        configuration. In this case, the configuration file is searched
                        from profiles/dev/ directory.
 -->
                    <filter>profiles/${build.profile.id}/config.properties</filter>

                </filters>
                <resources>
                    <!--
                        Placeholders found from files located in the configured resource directories are replaced
                        with values found from the profile specific configuration files.
                    -->
                    <resource>
                        <filtering>true</filtering>
                        <directory>src/main/resources/conf/dev</directory>
                        <!--
                            You can also include only specific files found from the configured directory or
                            exclude files. This can be done by uncommenting following sections and adding
                            the configuration under includes and excludes tags.
                        -->
                        <!--
                        <includes>
                            <include></include>
                        </includes>
                        <excludes>
                            <exclude></exclude>
                        </excludes>
                        -->
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <!--
                    Specifies the build profile id, which is used to find out the correct properties file.
                    This is not actually necessary for this example, but it can be used for other purposes.
                -->
                <build.profile.id>test</build.profile.id>
            </properties>
            <build>
                <filters>
                    <!--
                        Specifies path to the properties file, which contains profile specific
                        configuration. In this case, the configuration file is searched
                        from profiles/test/ directory.
                    -->
                    <filter>profiles/${build.profile.id}/config.properties</filter>
                </filters>
                <resources>
                    <!--
                        Placeholders found from files located in the configured resource directories are replaced
                        with values found from the profile specific configuration files.
                    -->
                    <resource>
                        <filtering>true</filtering>
                        <directory>src/main/resources</directory>
                        <!--
                            You can also include only specific files found from the configured directory or
                            exclude files. This can be done by uncommenting following sections and adding
                            the configuration under includes and excludes tags.
                        -->
                        <!--
                        <includes>
                            <include></include>
                        </includes>
                        <excludes>
                            <exclude></exclude>
                        </excludes>
                        -->
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <!--
                    Specifies the build profile id, which is used to find out the correct properties file.
                    This is not actually necessary for this example, but it can be used for other purposes.
                -->
                <build.profile.id>prod</build.profile.id>
            </properties>
            <build>
                <filters>
                    <!--
                        Specifies path to the properties file, which contains profile
                        specific configuration. In this case, the configuration file is searched
                        from profiles/prod/ directory.
-->
                    <filter>profiles/${build.profile.id}/config.properties</filter>

                </filters>
                <resources>
                    <!--
                        Placeholders found from files located in the configured resource directories are replaced
                        with values found from the profile specific configuration files.
                    -->
                    <resource>
                        <filtering>true</filtering>
                        <directory>src/main/resources/conf/prod</directory>
                        <!--
                            You can also include only specific files found from the configured directory or
                            exclude files. This can be done by uncommenting following sections and adding
                            the configuration under includes and excludes tags.
                        -->
                        <!--
                        <includes>
                            <include></include>
                        </includes>
                        <excludes>
                            <exclude></exclude>
                        </excludes>
                        -->
                    </resource>
                </resources>
            </build>
        </profile>
    </profiles>

    <build>
        <finalName>maven-properties-filtering</finalName>
        <plugins>
            <!-- The configuration of maven-assembly-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <!-- The configuration of the plugin -->
                <configuration>
                    <!-- Specifies the configuration file of the assembly plugin -->
                    <descriptors>
                        <descriptor>src/main/assembly/assembly.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>
            <!-- The configuration of maven-jar-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <!-- The configuration of the plugin -->
                <configuration>
                    <!-- Configuration of the archiver -->
                    <archive>
                        <!-- Manifest specific configuration -->
                        <manifest>
                            <!-- Classpath is added to the manifest of the created jar file. -->
                            <addClasspath>true</addClasspath>
                            <!--
                                Configures the classpath prefix. This configuration option is
                                used to specify that all needed libraries are found under lib/
                                directory.
                            -->
                            <classpathPrefix>lib/</classpathPrefix>
                            <!-- Specifies the main class of the application -->
                            <mainClass>net.petrikainulainen.mavenpropertiesfiltering.HelloWorldApp</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
